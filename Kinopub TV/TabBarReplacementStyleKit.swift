//
//  TabBarReplacementStyleKit.swift
//  TabBarReplacement
//
//  Created by Anthony Picciano on 1/9/16.
//  Copyright (c) 2016 Anthony Picciano. All rights reserved.
//
//  Generated by PaintCode (www.paintcodeapp.com)
//



import UIKit

open class TabBarReplacementStyleKit : NSObject {

    //// Drawing Methods

    open class func drawSearch(focused: Bool = false) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()

        //// Color Declarations
        let normalGradientColor2 = UIColor(red: 0.522, green: 0.522, blue: 0.522, alpha: 1.000)
        let normalGradientColor1 = UIColor(red: 0.675, green: 0.675, blue: 0.675, alpha: 1.000)

        //// Gradient Declarations
        let normalGradient = CGGradient(colorsSpace: CGColorSpaceCreateDeviceRGB(), colors: [normalGradientColor1.cgColor, normalGradientColor2.cgColor] as CFArray, locations: [0, 1])!
        let focusedGradient = CGGradient(colorsSpace: CGColorSpaceCreateDeviceRGB(), colors: [UIColor.white.cgColor, UIColor.white.cgColor] as CFArray, locations: [0, 1])!

        //// Variable Declarations
        let gradient = focused ? focusedGradient : normalGradient

        //// Magnifying Glass Drawing
        let magnifyingGlassPath = UIBezierPath()
        magnifyingGlassPath.move(to: CGPoint(x: 103, y: 40.61))
        magnifyingGlassPath.addCurve(to: CGPoint(x: 91.8, y: 29.38), controlPoint1: CGPoint(x: 99.28, y: 36.88), controlPoint2: CGPoint(x: 95.53, y: 33.12))
        magnifyingGlassPath.addCurve(to: CGPoint(x: 88.43, y: 32.75), controlPoint1: CGPoint(x: 90.65, y: 30.53), controlPoint2: CGPoint(x: 89.53, y: 31.65))
        magnifyingGlassPath.addCurve(to: CGPoint(x: 99.65, y: 43.96), controlPoint1: CGPoint(x: 92.17, y: 36.48), controlPoint2: CGPoint(x: 95.92, y: 40.23))
        magnifyingGlassPath.addCurve(to: CGPoint(x: 103, y: 40.61), controlPoint1: CGPoint(x: 100.74, y: 42.87), controlPoint2: CGPoint(x: 101.86, y: 41.75))
        magnifyingGlassPath.close()
        magnifyingGlassPath.move(to: CGPoint(x: 90.97, y: 19.03))
        magnifyingGlassPath.addCurve(to: CGPoint(x: 78.17, y: 6.4), controlPoint1: CGPoint(x: 90.91, y: 12.09), controlPoint2: CGPoint(x: 85.3, y: 6.39))
        magnifyingGlassPath.addCurve(to: CGPoint(x: 65.4, y: 19.37), controlPoint1: CGPoint(x: 70.93, y: 6.41), controlPoint2: CGPoint(x: 65.3, y: 12.29))
        magnifyingGlassPath.addCurve(to: CGPoint(x: 78.2, y: 31.98), controlPoint1: CGPoint(x: 65.5, y: 26.29), controlPoint2: CGPoint(x: 71.06, y: 31.95))
        magnifyingGlassPath.addCurve(to: CGPoint(x: 90.97, y: 19.03), controlPoint1: CGPoint(x: 85.34, y: 31.95), controlPoint2: CGPoint(x: 91.04, y: 26.21))
        magnifyingGlassPath.close()
        magnifyingGlassPath.move(to: CGPoint(x: 93.37, y: 18.97))
        magnifyingGlassPath.addCurve(to: CGPoint(x: 78.2, y: 34.37), controlPoint1: CGPoint(x: 93.49, y: 27.43), controlPoint2: CGPoint(x: 86.71, y: 34.37))
        magnifyingGlassPath.addCurve(to: CGPoint(x: 63, y: 19.43), controlPoint1: CGPoint(x: 69.76, y: 34.37), controlPoint2: CGPoint(x: 63.13, y: 27.62))
        magnifyingGlassPath.addCurve(to: CGPoint(x: 78.18, y: 4), controlPoint1: CGPoint(x: 62.87, y: 10.95), controlPoint2: CGPoint(x: 69.67, y: 4.02))
        magnifyingGlassPath.addCurve(to: CGPoint(x: 93.37, y: 18.97), controlPoint1: CGPoint(x: 86.59, y: 4.01), controlPoint2: CGPoint(x: 93.26, y: 10.73))
        magnifyingGlassPath.close()
        context?.saveGState()
        magnifyingGlassPath.addClip()
        context?.drawLinearGradient(gradient, start: CGPoint(x: 83, y: 4), end: CGPoint(x: 83, y: 43.96), options: CGGradientDrawingOptions())
        context?.restoreGState()
    }

    open class func drawSettings(focused: Bool = false) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()

        //// Color Declarations
        let normalGradientColor2 = UIColor(red: 0.522, green: 0.522, blue: 0.522, alpha: 1.000)
        let normalGradientColor1 = UIColor(red: 0.675, green: 0.675, blue: 0.675, alpha: 1.000)

        //// Gradient Declarations
        let normalGradient = CGGradient(colorsSpace: CGColorSpaceCreateDeviceRGB(), colors: [normalGradientColor1.cgColor, normalGradientColor2.cgColor] as CFArray, locations: [0, 1])!
        let focusedGradient = CGGradient(colorsSpace: CGColorSpaceCreateDeviceRGB(), colors: [UIColor.white.cgColor, UIColor.white.cgColor] as CFArray, locations: [0, 1])!

        //// Variable Declarations
        let gradient = focused ? focusedGradient : normalGradient

        //// Group 2
        //// Bezier Drawing
        let bezierPath = UIBezierPath()
        bezierPath.move(to: CGPoint(x: 24.01, y: 16))
        bezierPath.addCurve(to: CGPoint(x: 23.09, y: 16.05), controlPoint1: CGPoint(x: 23.7, y: 16), controlPoint2: CGPoint(x: 23.4, y: 16.02))
        bezierPath.addCurve(to: CGPoint(x: 17.73, y: 19.01), controlPoint1: CGPoint(x: 21.01, y: 16.28), controlPoint2: CGPoint(x: 19.05, y: 17.36))
        bezierPath.addCurve(to: CGPoint(x: 16.06, y: 24.94), controlPoint1: CGPoint(x: 16.4, y: 20.68), controlPoint2: CGPoint(x: 15.81, y: 22.79))
        bezierPath.addCurve(to: CGPoint(x: 23.94, y: 32), controlPoint1: CGPoint(x: 16.52, y: 28.96), controlPoint2: CGPoint(x: 19.91, y: 32))
        bezierPath.addCurve(to: CGPoint(x: 24.28, y: 31.99), controlPoint1: CGPoint(x: 24.06, y: 32), controlPoint2: CGPoint(x: 24.18, y: 32))
        bezierPath.addCurve(to: CGPoint(x: 30.03, y: 29.24), controlPoint1: CGPoint(x: 26.47, y: 31.94), controlPoint2: CGPoint(x: 28.56, y: 30.93))
        bezierPath.addCurve(to: CGPoint(x: 31.95, y: 23.08), controlPoint1: CGPoint(x: 31.53, y: 27.52), controlPoint2: CGPoint(x: 32.21, y: 25.33))
        bezierPath.addCurve(to: CGPoint(x: 24.01, y: 16), controlPoint1: CGPoint(x: 31.48, y: 19.04), controlPoint2: CGPoint(x: 28.07, y: 16))
        bezierPath.close()
        bezierPath.move(to: CGPoint(x: 24.01, y: 18))
        bezierPath.addCurve(to: CGPoint(x: 29.96, y: 23.31), controlPoint1: CGPoint(x: 27.05, y: 18), controlPoint2: CGPoint(x: 29.61, y: 20.28))
        bezierPath.addCurve(to: CGPoint(x: 28.52, y: 27.93), controlPoint1: CGPoint(x: 30.15, y: 24.99), controlPoint2: CGPoint(x: 29.64, y: 26.63))
        bezierPath.addCurve(to: CGPoint(x: 24.18, y: 29.99), controlPoint1: CGPoint(x: 27.42, y: 29.2), controlPoint2: CGPoint(x: 25.86, y: 29.95))
        bezierPath.addCurve(to: CGPoint(x: 23.94, y: 30), controlPoint1: CGPoint(x: 24.11, y: 30), controlPoint2: CGPoint(x: 24.02, y: 30))
        bezierPath.addCurve(to: CGPoint(x: 18.04, y: 24.7), controlPoint1: CGPoint(x: 20.93, y: 30), controlPoint2: CGPoint(x: 18.39, y: 27.72))
        bezierPath.addCurve(to: CGPoint(x: 19.3, y: 20.26), controlPoint1: CGPoint(x: 17.85, y: 23.09), controlPoint2: CGPoint(x: 18.3, y: 21.51))
        bezierPath.addCurve(to: CGPoint(x: 23.31, y: 18.04), controlPoint1: CGPoint(x: 20.29, y: 19.02), controlPoint2: CGPoint(x: 21.75, y: 18.21))
        bezierPath.addCurve(to: CGPoint(x: 24.01, y: 18), controlPoint1: CGPoint(x: 23.54, y: 18.01), controlPoint2: CGPoint(x: 23.77, y: 18))
        bezierPath.close()
        context?.saveGState()
        bezierPath.addClip()
        context?.drawLinearGradient(gradient, start: CGPoint(x: 24, y: 16), end: CGPoint(x: 24, y: 32), options: CGGradientDrawingOptions())
        context?.restoreGState()


        //// Bezier 2 Drawing
        let bezier2Path = UIBezierPath()
        bezier2Path.move(to: CGPoint(x: 23.93, y: 4))
        bezier2Path.addCurve(to: CGPoint(x: 20.42, y: 4.01), controlPoint1: CGPoint(x: 22.76, y: 4), controlPoint2: CGPoint(x: 21.59, y: 4))
        bezier2Path.addCurve(to: CGPoint(x: 19.42, y: 5.01), controlPoint1: CGPoint(x: 19.87, y: 4.01), controlPoint2: CGPoint(x: 19.42, y: 4.46))
        bezier2Path.addCurve(to: CGPoint(x: 19.43, y: 8.56), controlPoint1: CGPoint(x: 19.42, y: 6.19), controlPoint2: CGPoint(x: 19.41, y: 7.38))
        bezier2Path.addCurve(to: CGPoint(x: 19.13, y: 8.97), controlPoint1: CGPoint(x: 19.43, y: 8.8), controlPoint2: CGPoint(x: 19.34, y: 8.89))
        bezier2Path.addCurve(to: CGPoint(x: 16.62, y: 9.99), controlPoint1: CGPoint(x: 18.29, y: 9.29), controlPoint2: CGPoint(x: 17.45, y: 9.63))
        bezier2Path.addCurve(to: CGPoint(x: 16.47, y: 10.02), controlPoint1: CGPoint(x: 16.57, y: 10.01), controlPoint2: CGPoint(x: 16.52, y: 10.02))
        bezier2Path.addCurve(to: CGPoint(x: 16.21, y: 9.91), controlPoint1: CGPoint(x: 16.38, y: 10.02), controlPoint2: CGPoint(x: 16.28, y: 9.98))
        bezier2Path.addCurve(to: CGPoint(x: 13.73, y: 7.47), controlPoint1: CGPoint(x: 15.39, y: 9.09), controlPoint2: CGPoint(x: 14.56, y: 8.28))
        bezier2Path.addCurve(to: CGPoint(x: 12.92, y: 7.04), controlPoint1: CGPoint(x: 13.44, y: 7.19), controlPoint2: CGPoint(x: 13.18, y: 7.04))
        bezier2Path.addCurve(to: CGPoint(x: 12.09, y: 7.49), controlPoint1: CGPoint(x: 12.66, y: 7.04), controlPoint2: CGPoint(x: 12.39, y: 7.19))
        bezier2Path.addCurve(to: CGPoint(x: 10.72, y: 8.87), controlPoint1: CGPoint(x: 11.63, y: 7.95), controlPoint2: CGPoint(x: 11.18, y: 8.41))
        bezier2Path.addCurve(to: CGPoint(x: 7.42, y: 12.22), controlPoint1: CGPoint(x: 9.62, y: 9.99), controlPoint2: CGPoint(x: 8.52, y: 11.1))
        bezier2Path.addCurve(to: CGPoint(x: 7.43, y: 13.82), controlPoint1: CGPoint(x: 6.98, y: 12.66), controlPoint2: CGPoint(x: 6.99, y: 13.37))
        bezier2Path.addCurve(to: CGPoint(x: 7.74, y: 14.13), controlPoint1: CGPoint(x: 7.53, y: 13.92), controlPoint2: CGPoint(x: 7.63, y: 14.02))
        bezier2Path.addLine(to: CGPoint(x: 9.85, y: 16.24))
        bezier2Path.addCurve(to: CGPoint(x: 9.94, y: 16.67), controlPoint1: CGPoint(x: 9.96, y: 16.35), controlPoint2: CGPoint(x: 9.99, y: 16.52))
        bezier2Path.addCurve(to: CGPoint(x: 8.93, y: 19.24), controlPoint1: CGPoint(x: 9.59, y: 17.55), controlPoint2: CGPoint(x: 9.25, y: 18.39))
        bezier2Path.addCurve(to: CGPoint(x: 8.56, y: 19.5), controlPoint1: CGPoint(x: 8.87, y: 19.39), controlPoint2: CGPoint(x: 8.73, y: 19.5))
        bezier2Path.addLine(to: CGPoint(x: 8.56, y: 19.5))
        bezier2Path.addCurve(to: CGPoint(x: 6.8, y: 19.49), controlPoint1: CGPoint(x: 7.97, y: 19.49), controlPoint2: CGPoint(x: 7.39, y: 19.49))
        bezier2Path.addCurve(to: CGPoint(x: 5.08, y: 19.49), controlPoint1: CGPoint(x: 6.23, y: 19.49), controlPoint2: CGPoint(x: 5.65, y: 19.49))
        bezier2Path.addCurve(to: CGPoint(x: 4, y: 20.57), controlPoint1: CGPoint(x: 4.48, y: 19.49), controlPoint2: CGPoint(x: 4, y: 19.98))
        bezier2Path.addCurve(to: CGPoint(x: 4, y: 27.36), controlPoint1: CGPoint(x: 4, y: 22.84), controlPoint2: CGPoint(x: 4, y: 25.1))
        bezier2Path.addCurve(to: CGPoint(x: 5.09, y: 28.46), controlPoint1: CGPoint(x: 4, y: 27.97), controlPoint2: CGPoint(x: 4.49, y: 28.46))
        bezier2Path.addCurve(to: CGPoint(x: 6.27, y: 28.46), controlPoint1: CGPoint(x: 5.48, y: 28.46), controlPoint2: CGPoint(x: 5.88, y: 28.46))
        bezier2Path.addCurve(to: CGPoint(x: 8, y: 28.46), controlPoint1: CGPoint(x: 6.85, y: 28.46), controlPoint2: CGPoint(x: 7.42, y: 28.46))
        bezier2Path.addCurve(to: CGPoint(x: 9.11, y: 29.24), controlPoint1: CGPoint(x: 8.83, y: 28.46), controlPoint2: CGPoint(x: 8.81, y: 28.47))
        bezier2Path.addCurve(to: CGPoint(x: 9.99, y: 31.37), controlPoint1: CGPoint(x: 9.37, y: 29.92), controlPoint2: CGPoint(x: 9.66, y: 30.59))
        bezier2Path.addCurve(to: CGPoint(x: 9.9, y: 31.84), controlPoint1: CGPoint(x: 10.06, y: 31.53), controlPoint2: CGPoint(x: 10.02, y: 31.72))
        bezier2Path.addCurve(to: CGPoint(x: 7.46, y: 34.15), controlPoint1: CGPoint(x: 9.11, y: 32.58), controlPoint2: CGPoint(x: 8.28, y: 33.36))
        bezier2Path.addCurve(to: CGPoint(x: 7.45, y: 35.82), controlPoint1: CGPoint(x: 6.99, y: 34.61), controlPoint2: CGPoint(x: 6.99, y: 35.36))
        bezier2Path.addCurve(to: CGPoint(x: 12.21, y: 40.57), controlPoint1: CGPoint(x: 9.04, y: 37.4), controlPoint2: CGPoint(x: 10.62, y: 38.99))
        bezier2Path.addCurve(to: CGPoint(x: 13.02, y: 40.91), controlPoint1: CGPoint(x: 12.43, y: 40.8), controlPoint2: CGPoint(x: 12.73, y: 40.91))
        bezier2Path.addCurve(to: CGPoint(x: 13.84, y: 40.57), controlPoint1: CGPoint(x: 13.32, y: 40.91), controlPoint2: CGPoint(x: 13.61, y: 40.8))
        bezier2Path.addCurve(to: CGPoint(x: 16.3, y: 38.1), controlPoint1: CGPoint(x: 14.66, y: 39.75), controlPoint2: CGPoint(x: 15.48, y: 38.93))
        bezier2Path.addCurve(to: CGPoint(x: 16.55, y: 37.96), controlPoint1: CGPoint(x: 16.39, y: 38.02), controlPoint2: CGPoint(x: 16.45, y: 37.96))
        bezier2Path.addCurve(to: CGPoint(x: 16.7, y: 38), controlPoint1: CGPoint(x: 16.59, y: 37.96), controlPoint2: CGPoint(x: 16.64, y: 37.97))
        bezier2Path.addCurve(to: CGPoint(x: 19.22, y: 39.03), controlPoint1: CGPoint(x: 17.53, y: 38.36), controlPoint2: CGPoint(x: 18.37, y: 38.7))
        bezier2Path.addCurve(to: CGPoint(x: 19.51, y: 39.46), controlPoint1: CGPoint(x: 19.4, y: 39.1), controlPoint2: CGPoint(x: 19.51, y: 39.27))
        bezier2Path.addCurve(to: CGPoint(x: 19.5, y: 42.95), controlPoint1: CGPoint(x: 19.5, y: 40.62), controlPoint2: CGPoint(x: 19.5, y: 41.79))
        bezier2Path.addCurve(to: CGPoint(x: 20.55, y: 44), controlPoint1: CGPoint(x: 19.51, y: 43.53), controlPoint2: CGPoint(x: 19.97, y: 43.99))
        bezier2Path.addCurve(to: CGPoint(x: 24, y: 44), controlPoint1: CGPoint(x: 21.7, y: 44), controlPoint2: CGPoint(x: 22.85, y: 44))
        bezier2Path.addCurve(to: CGPoint(x: 27.45, y: 44), controlPoint1: CGPoint(x: 25.15, y: 44), controlPoint2: CGPoint(x: 26.3, y: 44))
        bezier2Path.addCurve(to: CGPoint(x: 28.49, y: 42.95), controlPoint1: CGPoint(x: 28.03, y: 43.99), controlPoint2: CGPoint(x: 28.49, y: 43.53))
        bezier2Path.addCurve(to: CGPoint(x: 28.49, y: 39.44), controlPoint1: CGPoint(x: 28.49, y: 41.78), controlPoint2: CGPoint(x: 28.5, y: 40.61))
        bezier2Path.addCurve(to: CGPoint(x: 28.78, y: 39.03), controlPoint1: CGPoint(x: 28.48, y: 39.2), controlPoint2: CGPoint(x: 28.57, y: 39.11))
        bezier2Path.addCurve(to: CGPoint(x: 31.23, y: 38.03), controlPoint1: CGPoint(x: 29.6, y: 38.71), controlPoint2: CGPoint(x: 30.43, y: 38.39))
        bezier2Path.addCurve(to: CGPoint(x: 31.45, y: 37.97), controlPoint1: CGPoint(x: 31.32, y: 37.99), controlPoint2: CGPoint(x: 31.39, y: 37.97))
        bezier2Path.addCurve(to: CGPoint(x: 31.72, y: 38.12), controlPoint1: CGPoint(x: 31.55, y: 37.97), controlPoint2: CGPoint(x: 31.62, y: 38.02))
        bezier2Path.addCurve(to: CGPoint(x: 34.19, y: 40.59), controlPoint1: CGPoint(x: 32.53, y: 38.95), controlPoint2: CGPoint(x: 33.36, y: 39.77))
        bezier2Path.addCurve(to: CGPoint(x: 34.98, y: 40.92), controlPoint1: CGPoint(x: 34.4, y: 40.81), controlPoint2: CGPoint(x: 34.69, y: 40.92))
        bezier2Path.addCurve(to: CGPoint(x: 35.77, y: 40.6), controlPoint1: CGPoint(x: 35.26, y: 40.92), controlPoint2: CGPoint(x: 35.55, y: 40.81))
        bezier2Path.addCurve(to: CGPoint(x: 40.57, y: 35.79), controlPoint1: CGPoint(x: 37.37, y: 38.99), controlPoint2: CGPoint(x: 38.97, y: 37.39))
        bezier2Path.addCurve(to: CGPoint(x: 40.57, y: 34.18), controlPoint1: CGPoint(x: 41.01, y: 35.35), controlPoint2: CGPoint(x: 41.01, y: 34.62))
        bezier2Path.addCurve(to: CGPoint(x: 38.1, y: 31.72), controlPoint1: CGPoint(x: 39.75, y: 33.35), controlPoint2: CGPoint(x: 38.93, y: 32.53))
        bezier2Path.addCurve(to: CGPoint(x: 38.02, y: 31.3), controlPoint1: CGPoint(x: 37.99, y: 31.61), controlPoint2: CGPoint(x: 37.96, y: 31.45))
        bezier2Path.addCurve(to: CGPoint(x: 39.07, y: 28.74), controlPoint1: CGPoint(x: 38.39, y: 30.46), controlPoint2: CGPoint(x: 38.74, y: 29.6))
        bezier2Path.addCurve(to: CGPoint(x: 39.42, y: 28.5), controlPoint1: CGPoint(x: 39.13, y: 28.6), controlPoint2: CGPoint(x: 39.26, y: 28.5))
        bezier2Path.addLine(to: CGPoint(x: 39.42, y: 28.5))
        bezier2Path.addCurve(to: CGPoint(x: 41.23, y: 28.51), controlPoint1: CGPoint(x: 40.02, y: 28.51), controlPoint2: CGPoint(x: 40.63, y: 28.51))
        bezier2Path.addCurve(to: CGPoint(x: 42.93, y: 28.51), controlPoint1: CGPoint(x: 41.8, y: 28.51), controlPoint2: CGPoint(x: 42.37, y: 28.51))
        bezier2Path.addCurve(to: CGPoint(x: 44, y: 27.44), controlPoint1: CGPoint(x: 43.52, y: 28.51), controlPoint2: CGPoint(x: 44, y: 28.03))
        bezier2Path.addCurve(to: CGPoint(x: 44, y: 20.56), controlPoint1: CGPoint(x: 44, y: 25.15), controlPoint2: CGPoint(x: 44, y: 22.86))
        bezier2Path.addCurve(to: CGPoint(x: 42.93, y: 19.49), controlPoint1: CGPoint(x: 44, y: 19.97), controlPoint2: CGPoint(x: 43.52, y: 19.49))
        bezier2Path.addCurve(to: CGPoint(x: 41.26, y: 19.49), controlPoint1: CGPoint(x: 42.37, y: 19.49), controlPoint2: CGPoint(x: 41.82, y: 19.49))
        bezier2Path.addCurve(to: CGPoint(x: 39.45, y: 19.5), controlPoint1: CGPoint(x: 40.66, y: 19.49), controlPoint2: CGPoint(x: 40.06, y: 19.49))
        bezier2Path.addLine(to: CGPoint(x: 39.44, y: 19.5))
        bezier2Path.addCurve(to: CGPoint(x: 39.06, y: 19.23), controlPoint1: CGPoint(x: 39.24, y: 19.5), controlPoint2: CGPoint(x: 39.14, y: 19.44))
        bezier2Path.addCurve(to: CGPoint(x: 38.05, y: 16.75), controlPoint1: CGPoint(x: 38.74, y: 18.4), controlPoint2: CGPoint(x: 38.4, y: 17.57))
        bezier2Path.addCurve(to: CGPoint(x: 38.11, y: 16.28), controlPoint1: CGPoint(x: 37.96, y: 16.56), controlPoint2: CGPoint(x: 37.94, y: 16.44))
        bezier2Path.addCurve(to: CGPoint(x: 40.57, y: 13.82), controlPoint1: CGPoint(x: 38.94, y: 15.47), controlPoint2: CGPoint(x: 39.75, y: 14.64))
        bezier2Path.addCurve(to: CGPoint(x: 40.56, y: 12.21), controlPoint1: CGPoint(x: 41.02, y: 13.37), controlPoint2: CGPoint(x: 41.01, y: 12.65))
        bezier2Path.addCurve(to: CGPoint(x: 35.72, y: 7.5), controlPoint1: CGPoint(x: 38.95, y: 10.64), controlPoint2: CGPoint(x: 37.33, y: 9.07))
        bezier2Path.addCurve(to: CGPoint(x: 34.88, y: 7.16), controlPoint1: CGPoint(x: 35.48, y: 7.27), controlPoint2: CGPoint(x: 35.18, y: 7.16))
        bezier2Path.addCurve(to: CGPoint(x: 34.03, y: 7.51), controlPoint1: CGPoint(x: 34.57, y: 7.16), controlPoint2: CGPoint(x: 34.26, y: 7.28))
        bezier2Path.addCurve(to: CGPoint(x: 31.65, y: 9.91), controlPoint1: CGPoint(x: 33.22, y: 8.33), controlPoint2: CGPoint(x: 32.41, y: 9.14))
        bezier2Path.addCurve(to: CGPoint(x: 31.37, y: 10.03), controlPoint1: CGPoint(x: 31.57, y: 9.99), controlPoint2: CGPoint(x: 31.47, y: 10.03))
        bezier2Path.addCurve(to: CGPoint(x: 31.22, y: 10), controlPoint1: CGPoint(x: 31.32, y: 10.03), controlPoint2: CGPoint(x: 31.27, y: 10.02))
        bezier2Path.addCurve(to: CGPoint(x: 28.62, y: 9), controlPoint1: CGPoint(x: 30.32, y: 9.65), controlPoint2: CGPoint(x: 29.47, y: 9.31))
        bezier2Path.addCurve(to: CGPoint(x: 28.38, y: 8.65), controlPoint1: CGPoint(x: 28.43, y: 8.93), controlPoint2: CGPoint(x: 28.38, y: 8.83))
        bezier2Path.addCurve(to: CGPoint(x: 28.39, y: 4.94), controlPoint1: CGPoint(x: 28.39, y: 7.41), controlPoint2: CGPoint(x: 28.38, y: 6.18))
        bezier2Path.addCurve(to: CGPoint(x: 27.47, y: 4.01), controlPoint1: CGPoint(x: 28.39, y: 4.43), controlPoint2: CGPoint(x: 27.99, y: 4.01))
        bezier2Path.addCurve(to: CGPoint(x: 23.93, y: 4), controlPoint1: CGPoint(x: 26.29, y: 4), controlPoint2: CGPoint(x: 25.11, y: 4))
        bezier2Path.close()
        bezier2Path.move(to: CGPoint(x: 23.93, y: 6))
        bezier2Path.addCurve(to: CGPoint(x: 26.39, y: 6), controlPoint1: CGPoint(x: 24.75, y: 6), controlPoint2: CGPoint(x: 25.57, y: 6))
        bezier2Path.addCurve(to: CGPoint(x: 26.38, y: 6.94), controlPoint1: CGPoint(x: 26.38, y: 6.32), controlPoint2: CGPoint(x: 26.38, y: 6.63))
        bezier2Path.addCurve(to: CGPoint(x: 26.38, y: 8.63), controlPoint1: CGPoint(x: 26.38, y: 7.51), controlPoint2: CGPoint(x: 26.38, y: 8.07))
        bezier2Path.addCurve(to: CGPoint(x: 27.92, y: 10.87), controlPoint1: CGPoint(x: 26.37, y: 9.67), controlPoint2: CGPoint(x: 26.95, y: 10.51))
        bezier2Path.addCurve(to: CGPoint(x: 29.99, y: 11.66), controlPoint1: CGPoint(x: 28.6, y: 11.12), controlPoint2: CGPoint(x: 29.28, y: 11.39))
        bezier2Path.addLine(to: CGPoint(x: 30.5, y: 11.86))
        bezier2Path.addCurve(to: CGPoint(x: 31.37, y: 12.03), controlPoint1: CGPoint(x: 30.78, y: 11.97), controlPoint2: CGPoint(x: 31.07, y: 12.03))
        bezier2Path.addCurve(to: CGPoint(x: 33.07, y: 11.32), controlPoint1: CGPoint(x: 32.01, y: 12.03), controlPoint2: CGPoint(x: 32.62, y: 11.77))
        bezier2Path.addLine(to: CGPoint(x: 33.66, y: 10.72))
        bezier2Path.addLine(to: CGPoint(x: 34.89, y: 9.48))
        bezier2Path.addLine(to: CGPoint(x: 36.42, y: 10.97))
        bezier2Path.addLine(to: CGPoint(x: 38.54, y: 13.03))
        bezier2Path.addCurve(to: CGPoint(x: 36.71, y: 14.85), controlPoint1: CGPoint(x: 37.93, y: 13.64), controlPoint2: CGPoint(x: 37.32, y: 14.25))
        bezier2Path.addCurve(to: CGPoint(x: 36.21, y: 17.54), controlPoint1: CGPoint(x: 36.36, y: 15.19), controlPoint2: CGPoint(x: 35.61, y: 16.14))
        bezier2Path.addCurve(to: CGPoint(x: 37.19, y: 19.95), controlPoint1: CGPoint(x: 36.6, y: 18.46), controlPoint2: CGPoint(x: 36.92, y: 19.22))
        bezier2Path.addCurve(to: CGPoint(x: 39.47, y: 21.5), controlPoint1: CGPoint(x: 37.56, y: 20.92), controlPoint2: CGPoint(x: 38.4, y: 21.5))
        bezier2Path.addLine(to: CGPoint(x: 39.47, y: 21.5))
        bezier2Path.addCurve(to: CGPoint(x: 41.26, y: 21.49), controlPoint1: CGPoint(x: 40.07, y: 21.49), controlPoint2: CGPoint(x: 40.67, y: 21.49))
        bezier2Path.addLine(to: CGPoint(x: 42, y: 21.49))
        bezier2Path.addCurve(to: CGPoint(x: 42, y: 26.51), controlPoint1: CGPoint(x: 42, y: 23.16), controlPoint2: CGPoint(x: 42, y: 24.84))
        bezier2Path.addLine(to: CGPoint(x: 41.23, y: 26.51))
        bezier2Path.addCurve(to: CGPoint(x: 39.42, y: 26.5), controlPoint1: CGPoint(x: 40.63, y: 26.51), controlPoint2: CGPoint(x: 40.04, y: 26.51))
        bezier2Path.addCurve(to: CGPoint(x: 37.21, y: 28.02), controlPoint1: CGPoint(x: 38.44, y: 26.5), controlPoint2: CGPoint(x: 37.57, y: 27.1))
        bezier2Path.addCurve(to: CGPoint(x: 36.19, y: 30.52), controlPoint1: CGPoint(x: 36.88, y: 28.87), controlPoint2: CGPoint(x: 36.53, y: 29.71))
        bezier2Path.addCurve(to: CGPoint(x: 36.7, y: 33.14), controlPoint1: CGPoint(x: 35.8, y: 31.42), controlPoint2: CGPoint(x: 36, y: 32.45))
        bezier2Path.addCurve(to: CGPoint(x: 38.55, y: 34.98), controlPoint1: CGPoint(x: 37.32, y: 33.75), controlPoint2: CGPoint(x: 37.94, y: 34.37))
        bezier2Path.addCurve(to: CGPoint(x: 34.98, y: 38.56), controlPoint1: CGPoint(x: 37.36, y: 36.17), controlPoint2: CGPoint(x: 36.17, y: 37.37))
        bezier2Path.addCurve(to: CGPoint(x: 33.15, y: 36.72), controlPoint1: CGPoint(x: 34.36, y: 37.95), controlPoint2: CGPoint(x: 33.75, y: 37.34))
        bezier2Path.addCurve(to: CGPoint(x: 31.45, y: 35.97), controlPoint1: CGPoint(x: 32.54, y: 36.1), controlPoint2: CGPoint(x: 31.89, y: 35.97))
        bezier2Path.addCurve(to: CGPoint(x: 30.42, y: 36.2), controlPoint1: CGPoint(x: 31.1, y: 35.97), controlPoint2: CGPoint(x: 30.77, y: 36.05))
        bezier2Path.addCurve(to: CGPoint(x: 28.06, y: 37.16), controlPoint1: CGPoint(x: 29.65, y: 36.55), controlPoint2: CGPoint(x: 28.83, y: 36.87))
        bezier2Path.addCurve(to: CGPoint(x: 26.49, y: 39.46), controlPoint1: CGPoint(x: 27.06, y: 37.54), controlPoint2: CGPoint(x: 26.47, y: 38.41))
        bezier2Path.addCurve(to: CGPoint(x: 26.49, y: 42), controlPoint1: CGPoint(x: 26.5, y: 40.31), controlPoint2: CGPoint(x: 26.49, y: 41.15))
        bezier2Path.addCurve(to: CGPoint(x: 24, y: 42), controlPoint1: CGPoint(x: 25.66, y: 42), controlPoint2: CGPoint(x: 24.83, y: 42))
        bezier2Path.addCurve(to: CGPoint(x: 21.5, y: 42), controlPoint1: CGPoint(x: 23.17, y: 42), controlPoint2: CGPoint(x: 22.33, y: 42))
        bezier2Path.addCurve(to: CGPoint(x: 21.51, y: 39.48), controlPoint1: CGPoint(x: 21.5, y: 41.16), controlPoint2: CGPoint(x: 21.5, y: 40.32))
        bezier2Path.addCurve(to: CGPoint(x: 19.94, y: 37.16), controlPoint1: CGPoint(x: 21.52, y: 38.47), controlPoint2: CGPoint(x: 20.89, y: 37.53))
        bezier2Path.addCurve(to: CGPoint(x: 17.51, y: 36.17), controlPoint1: CGPoint(x: 19.02, y: 36.81), controlPoint2: CGPoint(x: 18.22, y: 36.48))
        bezier2Path.addCurve(to: CGPoint(x: 16.55, y: 35.96), controlPoint1: CGPoint(x: 17.2, y: 36.03), controlPoint2: CGPoint(x: 16.87, y: 35.96))
        bezier2Path.addCurve(to: CGPoint(x: 14.89, y: 36.69), controlPoint1: CGPoint(x: 15.62, y: 35.96), controlPoint2: CGPoint(x: 15.07, y: 36.51))
        bezier2Path.addCurve(to: CGPoint(x: 13.02, y: 38.56), controlPoint1: CGPoint(x: 14.27, y: 37.32), controlPoint2: CGPoint(x: 13.65, y: 37.94))
        bezier2Path.addLine(to: CGPoint(x: 9.47, y: 35))
        bezier2Path.addCurve(to: CGPoint(x: 10.72, y: 33.81), controlPoint1: CGPoint(x: 9.88, y: 34.6), controlPoint2: CGPoint(x: 10.31, y: 34.2))
        bezier2Path.addLine(to: CGPoint(x: 11.27, y: 33.29))
        bezier2Path.addCurve(to: CGPoint(x: 11.83, y: 30.6), controlPoint1: CGPoint(x: 11.99, y: 32.61), controlPoint2: CGPoint(x: 12.22, y: 31.53))
        bezier2Path.addLine(to: CGPoint(x: 11.61, y: 30.07))
        bezier2Path.addCurve(to: CGPoint(x: 10.98, y: 28.52), controlPoint1: CGPoint(x: 11.38, y: 29.52), controlPoint2: CGPoint(x: 11.17, y: 29.03))
        bezier2Path.addLine(to: CGPoint(x: 10.96, y: 28.47))
        bezier2Path.addCurve(to: CGPoint(x: 8, y: 26.46), controlPoint1: CGPoint(x: 10.38, y: 26.97), controlPoint2: CGPoint(x: 9.63, y: 26.46))
        bezier2Path.addLine(to: CGPoint(x: 7.13, y: 26.46))
        bezier2Path.addLine(to: CGPoint(x: 6.27, y: 26.46))
        bezier2Path.addCurve(to: CGPoint(x: 6, y: 26.46), controlPoint1: CGPoint(x: 6.18, y: 26.46), controlPoint2: CGPoint(x: 6.09, y: 26.46))
        bezier2Path.addLine(to: CGPoint(x: 6, y: 21.49))
        bezier2Path.addLine(to: CGPoint(x: 6.8, y: 21.49))
        bezier2Path.addCurve(to: CGPoint(x: 8.56, y: 21.5), controlPoint1: CGPoint(x: 7.38, y: 21.49), controlPoint2: CGPoint(x: 7.96, y: 21.49))
        bezier2Path.addCurve(to: CGPoint(x: 10.81, y: 19.93), controlPoint1: CGPoint(x: 9.56, y: 21.5), controlPoint2: CGPoint(x: 10.46, y: 20.87))
        bezier2Path.addCurve(to: CGPoint(x: 11.59, y: 17.92), controlPoint1: CGPoint(x: 11.05, y: 19.26), controlPoint2: CGPoint(x: 11.32, y: 18.6))
        bezier2Path.addLine(to: CGPoint(x: 11.8, y: 17.4))
        bezier2Path.addCurve(to: CGPoint(x: 11.26, y: 14.83), controlPoint1: CGPoint(x: 12.15, y: 16.51), controlPoint2: CGPoint(x: 11.94, y: 15.5))
        bezier2Path.addLine(to: CGPoint(x: 9.45, y: 13.01))
        bezier2Path.addLine(to: CGPoint(x: 12.15, y: 10.28))
        bezier2Path.addLine(to: CGPoint(x: 12.93, y: 9.49))
        bezier2Path.addCurve(to: CGPoint(x: 14.8, y: 11.33), controlPoint1: CGPoint(x: 13.56, y: 10.1), controlPoint2: CGPoint(x: 14.18, y: 10.71))
        bezier2Path.addCurve(to: CGPoint(x: 16.47, y: 12.02), controlPoint1: CGPoint(x: 15.25, y: 11.78), controlPoint2: CGPoint(x: 15.84, y: 12.02))
        bezier2Path.addCurve(to: CGPoint(x: 17.42, y: 11.82), controlPoint1: CGPoint(x: 16.8, y: 12.02), controlPoint2: CGPoint(x: 17.12, y: 11.95))
        bezier2Path.addCurve(to: CGPoint(x: 19.85, y: 10.84), controlPoint1: CGPoint(x: 18.16, y: 11.5), controlPoint2: CGPoint(x: 18.96, y: 11.18))
        bezier2Path.addCurve(to: CGPoint(x: 21.43, y: 8.53), controlPoint1: CGPoint(x: 20.85, y: 10.45), controlPoint2: CGPoint(x: 21.44, y: 9.59))
        bezier2Path.addCurve(to: CGPoint(x: 21.42, y: 6), controlPoint1: CGPoint(x: 21.42, y: 7.69), controlPoint2: CGPoint(x: 21.42, y: 6.85))
        bezier2Path.addCurve(to: CGPoint(x: 23.93, y: 6), controlPoint1: CGPoint(x: 22.25, y: 6), controlPoint2: CGPoint(x: 23.09, y: 6))
        bezier2Path.close()
        context?.saveGState()
        bezier2Path.addClip()
        context?.drawLinearGradient(gradient, start: CGPoint(x: 24, y: 4), end: CGPoint(x: 24, y: 44), options: CGGradientDrawingOptions())
        context?.restoreGState()
    }

    //// Generated Images

    open class func imageOfSearch(focused: Bool = false) -> UIImage {
        UIGraphicsBeginImageContextWithOptions(CGSize(width: 106, height: 48), false, 0)
            TabBarReplacementStyleKit.drawSearch(focused: focused)

        let imageOfSearch = UIGraphicsGetImageFromCurrentImageContext()?.withRenderingMode(.alwaysOriginal)
        UIGraphicsEndImageContext()

        return imageOfSearch!
    }

    open class func imageOfSettings(focused: Bool = false) -> UIImage {
        UIGraphicsBeginImageContextWithOptions(CGSize(width: 48, height: 48), false, 0)
            TabBarReplacementStyleKit.drawSettings(focused: focused)

        let imageOfSettings = UIGraphicsGetImageFromCurrentImageContext()?.withRenderingMode(.alwaysOriginal)
        UIGraphicsEndImageContext()

        return imageOfSettings!
    }

}
